name: Release and Publish

on:
  push:
    tags:
      - 'v*.*.*'  # 匹配 v1.0.0, v2.1.3 等版本标签

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build project
        run: pnpm run build
        
      - name: Run tests (if available)
        run: pnpm test --if-present
        
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Extract Release Notes
        id: release-notes
        run: |
          # 检查 Node.js 可用性
          node --version
          
          # 确保脚本有执行权限
          chmod +x scripts/extract-release-notes.js
          
          # 提取 changelog 内容
          release_body=$(node scripts/extract-release-notes.js ${{ steps.version.outputs.VERSION }})
          
          # 保存到环境变量，处理多行内容
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$release_body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # 调试输出
          echo "Generated release notes for version ${{ steps.version.outputs.VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
          generate_release_notes: true
            
      - name: Publish to npm
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create build archive
        run: |
          cd lib
          zip -r ../build-${{ steps.version.outputs.VERSION }}.zip .
          cd ..
          
      - name: Upload build artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          files: ./build-${{ steps.version.outputs.VERSION }}.zip
